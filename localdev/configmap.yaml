flux:
  interval: 2m
  rollback:
    cleanupOnFail: false

networkPolicies:
  enabled: false

kiali:
  enabled: false

istio:
  sourceType: helmRepo
  enabled: true

istioOperator:
  sourceType: helmRepo
  enabled: true

monitoring:
  sourceType: helmRepo
  enabled: true
  values:
    prometheus:
      prometheusSpec:
        resources:
          requests:
            cpu: 200m
            memory: 1Gi

loki:
  sourceType: helmRepo
  enabled: true
  strategy: scalable
  values:
    minio:
      enabled: true
    write:
      replicas: 1
      persistence:
        size: 2Gi
      resources:
        limits:
          cpu: 200m
          memory: 400Mi
        requests:
          cpu: 200m
          memory: 400Mi
    read:
      replicas: 1
      persistence:
        size: 2Gi
      resources:
        limits:
          cpu: 200m
          memory: 400Mi
        requests:
          cpu: 200m
          memory: 400Mi
    extraobjects:
    - apiVersion: "security.istio.io/v1beta1"
      kind: PeerAuthentication
      metadata:
        name: loki-minio-endpoint-exception
        namespace: logging
      spec:
        mtls:
          mode: STRICT
        selector: 
          matchLabels:
            app: minio
        portLevelMtls:
          "9000":
            mode: PERMISSIVE
promtail:
  sourceType: helmRepo
  enabled: true

kyverno:
  sourceType: helmRepo
  enabled: true

kyvernoPolicies:
  sourceType: helmRepo
  enabled: true
  values:
    policies:
      restrict-volume-types:
        validationFailureAction: Audit
      restrict-image-registries:
        validationFailureAction: Audit
      restrict-host-path-write:
        validationFailureAction: Audit
      restrict-host-path-mount:
        validationFailureAction: Audit
      require-non-root-user:
        validationFailureAction: Audit
      require-non-root-group:
        validationFailureAction: Audit
      disallow-privileged-containers:
        validationFailureAction: Audit
      require-drop-all-capabilities:
        validationFailureAction: Audit
      restrict-host-path-mount-pv:
        validationFailureAction: Audit

neuvector:
  sourceType: helmRepo
  enabled: false
  values:
    k3s:
      enabled: true

sso:
  client_id: il2_eb21db65-3118-4017-bfe7-86829038d3dc_apps
  client_secret: "123456789"
  name: SSO
  url: https://login.gw.local/auth/realms/gamewarden
  # certificateAuthority:
  #   cert: |
  #
  #     -----BEGIN CERTIFICATE-----#     
  #     MIIE5TCCAs2gAwIBAgIBAjANBgkqhkiG9w0BAQsFADAXMRUwEwYDVQQDEwxMb2Nh#     
  #     bCBEZXYgQ0EwHhcNMjUwMzI1MTgyNzE0WhcNMjcwMzI1MTgyNzE0WjAVMRMwEQYD#     
  #     VQQDDAoqLmd3LmxvY2FsMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA#     
  #     qXqxjra22yx8No5qdI8rok1wNEOkdcEHQ2vfAZNQ6hckXJiy/8lHa24ay/mLRJu6#     
  #     dsym634vaRAT7LfRGVQIjzUg9gTVqxs/aj/sEnC2Gty+Sexf50uFGdesxxQiL24W#     
  #     qjVLaUQ4WnjL9qAvsm4L71QhIvvR4u1Xs4msSar2y69C254ZuS3jp6sHHLnlWs5N#     
  #     xIKv23/kf7bwVGMN7U1v+38HbAFkszMEFziCTnQ2umZ4yLaiywpRW1FN/Va8GRGw#     
  #     ZM735kNQ1koouYqG9xtVI5VFwBEHRtLadJSXRZ1VwdBuKe88DOjV0jJYhc/DT3DY#     
  #     xaYUyKh1OkgDsj1eUS12slOIJXTHQAOjLldFP8I6DmM640oks20ow7LtoHKtpGOP#     
  #     8njLL+cJe4s5UssK6q3DkGo2E4j1lB9DXTbsl8Usm7JKKFW/Slmv2TzKoJIi1O6Z#     
  #     Glc035mkAEW1NURApwUhm9Plumck6R1wnOLW0Et1rLlrL5R1JUrVTBrEcZHFQp2D#     
  #     H9BYS1XEsbz89N+wnOQ7SO1i0MBjMqran5JNkHnuqn03k1BBYbd1qmkRVt9uGTzq#     
  #     xNgTgEFmbQGod6Cqt5ryIJdfQ2Burf1c0gv+xVl2qsXR559CzCWa9ylf6vUd/ZWC#     
  #     dbbTfocIYfFysy5OO1qAykO1LJsvk28Xp8TQh9J7X6MCAwEAAaM+MDwwDgYDVR0P#     
  #     AQH/BAQDAgWgMBMGA1UdJQQMMAoGCCsGAQUFBwMBMBUGA1UdEQQOMAyCCiouZ3cu#     
  #     bG9jYWwwDQYJKoZIhvcNAQELBQADggIBAAd0v/8F7ehUwHP7IjowauiF6EcInjnp#     
  #     tlB5AKc1lo4D2BYJSkmb7yMDxwhZ4dU1JHtCppza02l94AFt6v3tkiG17zkOg7a1#     
  #     NaohuyjuQiV4A3sRXBXjej00D07rY8aOhknnky48MEjxRxWNbOI2ZH5rnSYs3+Aj#     
  #     uxg8kA7z9THeYzN+l2F2NVyCeIPsUkUOO06thB/fxygnz1euJilljJ/Gj0PvqQDk#     
  #     dVmgDFeWqoDZXIfsPDu7b54fFsAa014yGDiswIhID9fN6oreeJz0RdK4AKU+ej12#     
  #     5kERYbCaFemoXlfF0ialBnuvHmHzswblbQBDTxBOD1z8q1cRR47GGRRA1aKyPKau#     
  #     P2OZVzTGBUAsxIZrUKSJvNcdYI2MBLZ9YGYiqHCL8/l38NUUMT2L2efl2rZrX7sA#     
  #     /209aYVxKstiBTvJQoRMj1e3UDEYM3ztMD52yJu98R7vmdfQpAO4VHB+CHiu1khV#     
  #     9JKpvFIBL/JaVWzVwtosj/x+VOTyLEGSebEqhOrbNfW03M+GfW4wsmaDsVLT9Mr6#     
  #     5QxcjcmjQuNrYjUshqrmIEoJ7zqgcVHk80stHNG+eApdA1x+gTbUwtdVuxkvmJPm#     
  #     Gn34Hvp/91qseqoR4fciPPPJfkn5VFoPgzDX5Cz87KwppqusHXeLOmOeUyk4bnj+#     
  #     eLVEpRYt63EE#     
  #     -----END CERTIFICATE-----#     

grafana:
  values:
    grafana.ini:
      auth.generic_oauth:
        api_url: "https://login.gw.local/auth/realms/gamewarden/protocol/openid-connect/userinfo"
        auth_url: "https://login.gw.local/auth/realms/gamewarden/protocol/openid-connect/auth"
        client_id: "il2_eb21db65-3118-4017-bfe7-86829038d3dc_apps" #gitleaks:allow
        client_secret: "123456789"
        enabled: true
        groups_attribute_path: "groups"
        name: "Game Warden SSO"
        role_attribute_path: "contains(groups[*], '/Gamewarden/grafana-server-admin') && 'GrafanaAdmin' || contains(groups[*], '/Gamewarden/grafana-admin') && 'Admin' || 'Viewer'"
        role_attribute_strict: true
        scopes: "openid profile email grafana"
        token_url: "https://login.gw.local/auth/realms/gamewarden/protocol/openid-connect/token"


addons:
  authservice:
    enabled: true
    chains:
      APP:
        callback_uri: https://APP.gw.local
        client_id: il2_eb21db65-3118-4017-bfe7-86829038d3dc_apps
        client_secret: "123456789"
        match:
          prefix: "APP.gw.local"
  argocd:
    enabled: true
    sso:
      client_id: "il2_eb21db65-3118-4017-bfe7-86829038d3dc_apps" #gitleaks:allow
      client_secret: "123456789"
      enabled: true
    values:
      server:
        extraArgs:
        - --insecure
        - --repo-server-plaintext
      repoServer:
        extraArgs:
        - --disable-tls
      controller:
        extraArgs:
        - --repo-server-plaintext
      redis-bb:
        networkPolicy:
          enabled: false
      argocd-apps:
        applications:
          - destination:
              namespace: APP
              server: https://kubernetes.default.svc
            ignoreDifferences:
              - jsonPointers:
                  - /data
                  - /stringData
                kind: Secret
                name: generated-secrets
                namespace: APP
            info:
              - name: url
                value: https://github.com/second-front/uchart
            name: APP-ENV
            namespace: argocd
            project: default
            sources:
              - helm:
                  valueFiles:
                    - $values/app/base.yaml
                    - $values/app/ENV.yaml
                path: ./
                repoURL: https://github.com/second-front/uchart.git
                targetRevision: 1.0.10
              - ref: values
                repoURL: https://github.com/tonybutt/gw-gitops.git
                targetRevision: main
            syncPolicy:
              automated:
                prune: true
                selfHeal: true
              managedNamespaceMetadata:
                labels:
                  istio-injection: enabled
              syncOptions:
                - CreateNamespace=true
                - Validate=false
                - RespectIgnoreDifferences=true
  keycloak:
    enabled: true
    postRenderers:
      - kustomize:
          patchesStrategicMerge:
            - apiVersion: v1
              kind: Service
              metadata:
                name: keycloak-headless
                namespace: keycloak
              spec:
                ports:
                  - name: tcp
                    port: 7800
                    protocol: TCP
                    targetPort: tcp
                  - name: tcp-fd
                    port: 57800
                    protocol: TCP
                    targetPort: tcp-fd
      - kustomize:
          patchesStrategicMerge:
            - apiVersion: networking.istio.io/v1
              kind: VirtualService
              metadata:
                name: keycloak
                namespace: keycloak
              spec:
                tls: null
    values:
      replicas: 1
      args:
        - "start-dev"
        - --import-realm
      extraEnv: |-
        - name: KC_HTTPS_CLIENT_AUTH
          value: request
        - name: KC_HOSTNAME
          value: login.gw.local
        - name: KC_LOG_LEVEL
          value: "org.keycloak.events:DEBUG,org.infinispan:INFO,org.jgroups:INFO"
        - name: QUARKUS_HTTP_ACCESS_LOG_ENABLED
          value: "true"
        - name: KC_HOSTNAME_STRICT
          value: "false"
        - name: KC_HOSTNAME_STRICT_HTTPS
          value: "false"
        - name: KC_SPI_X509CERT_LOOKUP_PROVIDER
          value: nginx
        - name: KC_SPI_X509CERT_LOOKUP_NGINX_SSL_CLIENT_CERT
          value: istio-mtls-client-certificate
        - name: KC_SPI_X509CERT_LOOKUP_NGINX_SSL_CLIENT_CERT_CHAIN_PREFIX
          value: UNUSED
        - name: KC_PROXY_HEADERS
          value: xforwarded
        - name: KC_PROXY_ADDRESS_FORWARDING
          value: "true"
        - name: KC_HTTP_ENABLED
          value: "true"
        - name: QUANTUM_EMITTER_NATS_SERVER
          value: nats
      extraInitContainers: |-
        - name: plugin
          image: registry1.dso.mil/ironbank/big-bang/p1-keycloak-plugin:3.5.7
          command:
          - sh
          - -c
          - |
            cp /app/p1-keycloak-plugin.jar /init
            ls -l /init
          securityContext:
            capabilities:
              drop:
                - ALL
          volumeMounts:
          - name: plugin
            mountPath: "/init"
      extraPorts:
        - containerPort: 7800
          name: tcp
          protocol: TCP
        - containerPort: 57800
          name: tcp-fd
          protocol: TCP
      extraVolumeMounts: |-
        - name: plugin
          mountPath: /opt/keycloak/providers/p1-keycloak-plugin.jar
          subPath: p1-keycloak-plugin.jar
        - name: quarkusproperties
          mountPath: /opt/keycloak/conf/quarkus.properties
          subPath: quarkus.properties
        - name: realm
          mountPath: /opt/keycloak/data/import/realm.json
          subPath: realm.json
          readOnly: true
      extraVolumes: |-
        - name: plugin
          emptyDir: {}
        - name: quarkusproperties
          secret:
            secretName: keycloak-quarkusproperties
            defaultMode: 0777
        - name: realm
          configMap:
            name: gamewarden-realm
      hostname: gw.local
      istio:
        enabled: true
        keycloak:
          gateways:
            - istio-system/public
          hosts:
            - login.gw.local
      proxy:
        mode: xforwarded
      secrets:
        env:
          stringData:
            JAVA_OPTS_APPEND: -Djgroups.dns.query=keycloak-headless.keycloak.svc.cluster.local
        quarkusproperties:
          stringData:
            quarkus.properties: |-
              quarkus.http.non-application-root-path=/
              quarkus.kc-routing.path-redirect./=/auth/realms/gamewarden/account
              quarkus.kc-routing.path-redirect./auth=/auth/realms/gamewarden/account
              quarkus.kc-routing.path-redirect./register=/auth/realms/gamewarden/protocol/openid-connect/registrations?client_id=account&response_type=code
              quarkus.kc-routing.path-prefix./oauth/authorize=/auth/realms/gamewarden/protocol/openid-connect/auth
              quarkus.kc-routing.path-filter./api/v4/user=/auth/realms/gamewarden/protocol/openid-connect/userinfo
              quarkus.kc-routing.path-filter./oauth/token=/auth/realms/gamewarden/protocol/openid-connect/token
              quarkus.kc-routing.path-recursive-block./metrics=8443
              quarkus.kc-routing.path-recursive-block./health=8443
              quarkus.http.cors=true
              quarkus.http.cors.methods=OPTIONS,POST,GET,PATCH,PUT,DELETE
              quarkus.http.cors.headers=Content-Disposition,Access-Control-Allow-Headers,Content-Type,Authorization,X-Requested-With
              quarkus.http.cors.access-control-max-age=24H
              quarkus.http.cors.access-control-allow-credentials=true
              quarkus.http.cors.origins=*
      service:
        extraPorts: null
        httpPort: 8080
  metricsServer:
    sourceType: helmRepo
    enabled: auto
    values:
      args:
      - --kubelet-insecure-tls

  minioOperator:
    sourceType: helmRepo
    enabled: true